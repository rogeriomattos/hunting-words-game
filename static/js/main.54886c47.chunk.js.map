{"version":3,"sources":["pages/Main/index.js","utils/words.js","pages/Easy/index.js","routes.js","App.js","index.js"],"names":["Main","className","to","words","map","word","getWords","Easy","state","column","row","matrix","positionSelected","toScrambleTtheLetters","setState","huntWord","el","cleanWords","w","console","log","getLetterSelectedSameWord","lettersSelected","filter","selected","length","concat","verifyFindWord","wordsAux","isFinded","selectLetter","indexRow","indexColumn","joined","this","prevProps","prevState","alert","index","key","type","onClick","item","letter","Component","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54886c47.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Main () {\r\n    return(\r\n        <div className=\"main-container\">\r\n            <h1>Hunting Words</h1>\r\n            <p>\r\n                Bem-vindo ao Huntimg Words, selecione o nível de dificuldade para você se divertir.\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    <Link to={\"/easy\"}>\r\n                        Easy\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","const wordsText = [\r\n    'Apneia',\r\n    'Dermatite',\r\n    'Flictema',\r\n    'Intravenoso',\r\n    'Taquipneia',\r\n    'Urticária',\r\n]\r\n\r\nconst words = wordsText.map((word) => ({\r\n    'word': word, \r\n    'isFinded': false\r\n}));\r\n\r\nexport default function getWords(){ return words;};\r\n","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nimport getWords from '../../utils/words';\r\n\r\nimport * as huntWord  from 'hunting-words';\r\n\r\nexport default class Easy extends Component{\r\n    \r\n    state ={\r\n        column: 30,\r\n        row: 12,\r\n        matrix: [],\r\n        positionSelected: [],\r\n        words: []\r\n    };\r\n\r\n\r\n    componentDidMount(){\r\n        const { row, column } = this.state;\r\n\r\n        this.setState({\r\n            matrix: huntWord.create(getWords().map((el) =>{return el.word}), row, column),\r\n            words: getWords()\r\n        });    \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        const { row, column } = this.state;\r\n\r\n        if(row != prevState.row || column != prevState.column)\r\n            this.setState({\r\n                matrix: huntWord.create(getWords().map((el) =>{return el.word}), row, column),\r\n            }); \r\n\r\n        if(this.state.words.filter((el)=>{return el.isFinded}).length == this.state.words.length)\r\n            alert(\"Parabéns você encontrou todas as palavras\");\r\n    }\r\n\r\n    toScrambleTtheLetters = () => {\r\n        const { row, column } = this.state;\r\n        \r\n        this.setState({\r\n            matrix: huntWord.create(getWords().map((el) =>{return el.word}), row, column),\r\n        });\r\n        this.cleanWords();\r\n    }\r\n\r\n    cleanWords = () =>{\r\n        const w = this.state.words.map(({word}) => {\r\n            return {\r\n                'word': word, \r\n                'isFinded': false\r\n            };\r\n        });\r\n        console.log(w);\r\n        this.setState({\r\n            words: w\r\n        });\r\n    }\r\n\r\n    getLetterSelectedSameWord = (word) =>{\r\n        let lettersSelected = [];\r\n        this.state.matrix\r\n        .filter((row) =>{\r\n            if(row.filter((el)=> { return el.word == word && el.selected;}).length > 0)\r\n                lettersSelected = lettersSelected.concat( row.filter((el)=> { return el.word == word && el.selected;}));\r\n        }); \r\n        console.log(lettersSelected);\r\n        return lettersSelected;\r\n    }\r\n\r\n    verifyFindWord = (word) =>{\r\n        \r\n        if(word){\r\n            let lettersSelected = this.getLetterSelectedSameWord(word)\r\n            if(lettersSelected.length == word.length){\r\n                let wordsAux = this.state.words.map((el)=>{\r\n                   return {'word':el.word, 'isFinded':(el.word == word)? true : el.isFinded}\r\n                });\r\n                \r\n                //wordsAux[lettersSelected[0].wordIndex].isFinded = true;\r\n\r\n                this.setState({\r\n                    words: wordsAux\r\n                });\r\n            }\r\n        }\r\n           \r\n    }\r\n\r\n    selectLetter = (indexRow, indexColumn) =>{\r\n        const { matrix } = this.state;\r\n\r\n        var joined = matrix;\r\n        \r\n        joined[indexRow][indexColumn].selected = !matrix[indexRow][indexColumn].selected;\r\n\r\n        this.setState({\r\n            matrix: joined\r\n        });\r\n\r\n        this.verifyFindWord(joined[indexRow][indexColumn].word);\r\n    } \r\n\r\n    \r\n\r\n    render(){\r\n        const { words, matrix, column, row, positionSelected } = this.state;\r\n        \r\n        return(\r\n            <div className=\"easy-container\">\r\n                <div className=\"words\">\r\n                    {words.map(({word, isFinded}, index)=> (\r\n                        <span key={word + index} className={(isFinded)?\"finded\":\"\"}>{word}</span>    \r\n                    ))}\r\n                </div>\r\n            \r\n                <button type=\"button\" onClick={this.toScrambleTtheLetters}>Embaralhar palavras</button>\r\n            \r\n                <div className=\"word-board\">\r\n                    {matrix.map((row, indexRow) => (\r\n                        <ul key={'row' + indexRow}>\r\n                            {row.map((item, indexColumn) => (\r\n                                <li \r\n                                    className={(item.selected)? \"selected\" : \"\"}\r\n                                    key={'column' + indexColumn} \r\n                                    onClick={()=>{this.selectLetter(indexRow, indexColumn)}} \r\n                                >\r\n                                    {item.letter}\r\n                                </li>\r\n                            ))}\r\n                        </ul>    \r\n                    ))}\r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Easy from './pages/Easy';\r\n\r\nexport default function Routes(){\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/hunting-words-game\" exact component={Main} />\r\n                <Route path=\"/easy\" exact component={Easy} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\r\nimport './global.css';\r\n\r\nimport Routes from './routes';\r\n\r\nimport Main from './pages/Main';\r\nfunction App() {\r\n  return (\r\n    <Routes/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}